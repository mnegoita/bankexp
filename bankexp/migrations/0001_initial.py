# Generated by Django 4.1.2 on 2022-11-02 12:12

import ckeditor_uploader.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChequingAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Account Name')),
                ('notes', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Chequing Account',
                'verbose_name_plural': 'Chequing Accounts',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ChequingTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tr_date', models.DateField(help_text='Transaction Date', verbose_name='Date')),
                ('tr_desc', models.CharField(max_length=200, verbose_name='Description')),
                ('tr_withdrawal', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.001)], verbose_name='Withdrawal')),
                ('tr_deposits', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.001)], verbose_name='Deposits')),
                ('tr_balance', models.DecimalField(decimal_places=3, help_text='Transaction Balance', max_digits=10, verbose_name='Balance')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transactions', related_query_name='transaction', to='bankexp.chequingaccount', verbose_name='Account')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Chequing Transaction',
                'verbose_name_plural': 'Chequing Transactions',
                'ordering': ['-tr_date'],
            },
        ),
        migrations.CreateModel(
            name='CreditCardAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Account Name')),
                ('notes', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Credit Card Account',
                'verbose_name_plural': 'Credit Card Accounts',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CreditCardTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tr_date', models.DateField(help_text='Transaction Date', verbose_name='Date')),
                ('tr_desc', models.CharField(max_length=200, verbose_name='Description')),
                ('tr_debit', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.001)], verbose_name='Debit')),
                ('tr_credit', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.001)], verbose_name='Credit')),
                ('tr_balance', models.DecimalField(decimal_places=3, help_text='Transaction Balance', max_digits=10, verbose_name='Balance')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transactions', related_query_name='transaction', to='bankexp.creditcardaccount', verbose_name='Account')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Credit Card Transaction',
                'verbose_name_plural': 'Credit Card Transactions',
                'ordering': ['-tr_date'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('notes', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Like Walmart, Costco', max_length=200)),
                ('address', models.CharField(blank=True, max_length=200)),
                ('prov_st', models.CharField(blank=True, max_length=20, verbose_name='Province/State')),
                ('country', models.CharField(blank=True, max_length=20)),
                ('notes', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ExpenseType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Expense')),
                ('notes', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Expense Type',
                'verbose_name_plural': 'Expense Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ExpenseRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exp_date', models.DateField(verbose_name='Expense Date')),
                ('amount', models.DecimalField(decimal_places=3, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('tax', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('quantity', models.CharField(blank=True, default='', max_length=20)),
                ('details', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='', verbose_name='Record Details')),
                ('files', models.FileField(blank=True, null=True, upload_to='media/expenses/')),
                ('cc_tr', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='exp_recs', related_query_name='exp_rec', to='bankexp.creditcardtransaction', verbose_name='Credit Card Transaction')),
                ('chq_tr', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='exp_recs', related_query_name='exp_rec', to='bankexp.chequingtransaction', verbose_name='Chequing Transaction')),
                ('exp_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='exp_recs', related_query_name='exp_rec', to='bankexp.expensetype', verbose_name='Expense Type')),
                ('location', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exp_recs', related_query_name='exp_rec', to='bankexp.location')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Expense Record',
                'verbose_name_plural': 'Expense Records',
                'ordering': ['-exp_date'],
            },
        ),
        migrations.AddField(
            model_name='creditcardtransaction',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='cc_trs', related_query_name='cc_tr', to='bankexp.tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='chequingtransaction',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='chq_trs', related_query_name='chq_tr', to='bankexp.tag', verbose_name='Tags'),
        ),
        migrations.AddConstraint(
            model_name='tag',
            constraint=models.UniqueConstraint(fields=('owner', 'name'), name='unique_owner_name_tag'),
        ),
        migrations.AddConstraint(
            model_name='location',
            constraint=models.UniqueConstraint(fields=('owner', 'name', 'address'), name='unique_owner_name_address_location'),
        ),
        migrations.AddConstraint(
            model_name='expensetype',
            constraint=models.UniqueConstraint(fields=('owner', 'name'), name='unique_owner_name_expensetype'),
        ),
        migrations.AddConstraint(
            model_name='expenserecord',
            constraint=models.UniqueConstraint(fields=('owner', 'exp_type', 'exp_date', 'amount', 'location', 'chq_tr', 'cc_tr', 'quantity'), name='unique_fields_expenserecord'),
        ),
        migrations.AddConstraint(
            model_name='creditcardtransaction',
            constraint=models.UniqueConstraint(fields=('owner', 'account', 'tr_date', 'tr_desc', 'tr_debit', 'tr_credit', 'tr_balance'), name='unique_fields_creditcardtransaction'),
        ),
        migrations.AddConstraint(
            model_name='creditcardaccount',
            constraint=models.UniqueConstraint(fields=('owner', 'name'), name='unique_owner_name_creditcardaccount'),
        ),
        migrations.AddConstraint(
            model_name='chequingtransaction',
            constraint=models.UniqueConstraint(fields=('owner', 'account', 'tr_date', 'tr_desc', 'tr_withdrawal', 'tr_deposits', 'tr_balance'), name='unique_fields_chequingtransaction'),
        ),
        migrations.AddConstraint(
            model_name='chequingaccount',
            constraint=models.UniqueConstraint(fields=('owner', 'name'), name='unique_owner_name_chequingaccount'),
        ),
    ]
